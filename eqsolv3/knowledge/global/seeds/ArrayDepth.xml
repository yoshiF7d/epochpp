<NAME>ArrayDepth</NAME>
<PRECEDENCE>670</PRECEDENCE>
<ATTRIBUTES>Protected</ATTRIBUTES>
<PROTO>
Expr ArrayDepth(Expr expr);
int ArrayDepth_mod(Expr expr);
</PROTO>
<SOURCE>
Expr ArrayDepth(Expr expr){
	Expr e;
	if(!expr->child){return expr;}
	Expr_replace(expr,e=Integer_createInt(ArrayDepth_mod(expr->child)));
	Expr_deleteRoot(expr);
	return e;
}
int ArrayDepth_mod(Expr expr){
	Expr e;
	int length,min;
	if(!expr->child){return 0;}
	length = Expr_getLength(expr->child->child);
	for(e=expr->child->next;e;e=e->next){
		if(length != Expr_getLength(e->child)){
			length=0; break;
		}
	}
	if(length==0){return 1;}
	min = ArrayDepth_mod(expr->child);
	for(e=expr->child->next;e;e=e->next){
		length = ArrayDepth_mod(e);
		if(length < min){min = length;}
	}
	return min+1;
}
</SOURCE>
<DOC>
ArrayDepth[expr] gives the depth to which expr is a full array, with all the parts at a particular
level being lists of the same length, or is a SparseArray object.
</DOC>