<NAME>Blank2</NAME>
<PRECEDENCE>730</PRECEDENCE>
<ASSOCIATIVITY>un_pre</ASSOCIATIVITY>
<SIGN>"__"</SIGN>
<ATTRIBUTES>Protected</ATTRIBUTES>
<PROTO>
char *Blank2_toString(Expr expr);
void Blank2_data_init(union un_data *data);
void Blank2_data_copy(union un_data *datas, union un_data *datad);
</PROTO>
<SOURCE>
char *Blank2_toString(Expr expr){
	char *buf=NULL;
	int needed;
	if(expr->data.symbol){
		needed = snprintf(buf,0,"__%s",expr->data.symbol->name);
		buf = allocate(needed+1);
		snprintf(buf,needed+1,"__%s",expr->data.symbol->name);
	}else{
		return String_copy("__");
	}
	return buf;
}
void Blank2_data_init(union un_data *data){data->symbol = NULL;}
void Blank2_data_copy(union un_data *datas, union un_data *datad){datad->symbol = datas->symbol;}
</SOURCE>
<DOC>
__(two _ characters) or Blank2[] is a pattern object that can stand for any squence of one or more expressions.
__h or Blank2[h] can stand for any sequence of one or more expressions, all of which have head h.
</DOC>