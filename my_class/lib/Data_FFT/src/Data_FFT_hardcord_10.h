switch(m){
	  case 1:
		 return;
	  case 2:
		for(i=0;i<n;i++){
			temp->elem[i*2+0][0] = (data->elem[i*2+0][0]) + (data->elem[i*2+1][0])
			;
			temp->elem[i*2+1][0] = (data->elem[i*2+0][0]) + (-data->elem[i*2+1][0])
			;
			temp->elem[i*2+0][1] = 
			 + (data->elem[i*2+0][1]) + (data->elem[i*2+1][1]);
			temp->elem[i*2+1][1] = 
			 + (data->elem[i*2+0][1]) + (-data->elem[i*2+1][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*2+0][0] = temp->elem[i*2+0][0];
			data->elem[i*2+1][0] = temp->elem[i*2+1][0];
			data->elem[i*2+0][1] = temp->elem[i*2+0][1];
			data->elem[i*2+1][1] = temp->elem[i*2+1][1];
		}
		return;
	  case 3:
		for(i=0;i<n;i++){
			temp->elem[i*3+0][0] = (data->elem[i*3+0][0]) + (data->elem[i*3+1][0]) + (data->elem[i*3+2][0])
			;
			temp->elem[i*3+1][0] = (data->elem[i*3+0][0]) + (-5.00000000000000e-01)*(data->elem[i*3+1][0]) + (-5.00000000000000e-01)*(data->elem[i*3+2][0])
			 + (-sign)*(8.66025403784439e-01)*(data->elem[i*3+1][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*3+2][1]);
			temp->elem[i*3+2][0] = (data->elem[i*3+0][0]) + (-5.00000000000000e-01)*(data->elem[i*3+1][0]) + (-5.00000000000000e-01)*(data->elem[i*3+2][0])
			 + (-sign)*(-8.66025403784438e-01)*(data->elem[i*3+1][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*3+2][1]);
			temp->elem[i*3+0][1] = 
			 + (data->elem[i*3+0][1]) + (data->elem[i*3+1][1]) + (data->elem[i*3+2][1]);
			temp->elem[i*3+1][1] = sign*(8.66025403784439e-01)*(data->elem[i*3+1][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*3+2][0])
			 + (data->elem[i*3+0][1]) + (-5.00000000000000e-01)*(data->elem[i*3+1][1]) + (-5.00000000000000e-01)*(data->elem[i*3+2][1]);
			temp->elem[i*3+2][1] = sign*(-8.66025403784438e-01)*(data->elem[i*3+1][0]) + sign*(8.66025403784439e-01)*(data->elem[i*3+2][0])
			 + (data->elem[i*3+0][1]) + (-5.00000000000000e-01)*(data->elem[i*3+1][1]) + (-5.00000000000000e-01)*(data->elem[i*3+2][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*3+0][0] = temp->elem[i*3+0][0];
			data->elem[i*3+1][0] = temp->elem[i*3+1][0];
			data->elem[i*3+2][0] = temp->elem[i*3+2][0];
			data->elem[i*3+0][1] = temp->elem[i*3+0][1];
			data->elem[i*3+1][1] = temp->elem[i*3+1][1];
			data->elem[i*3+2][1] = temp->elem[i*3+2][1];
		}
		return;
	  case 4:
		for(i=0;i<n;i++){
			temp->elem[i*4+0][0] = (data->elem[i*4+0][0]) + (data->elem[i*4+1][0]) + (data->elem[i*4+2][0]) + (data->elem[i*4+3][0])
			;
			temp->elem[i*4+1][0] = (data->elem[i*4+0][0]) + (-data->elem[i*4+2][0])
			 + (-sign)*(data->elem[i*4+1][1]) + sign*(data->elem[i*4+3][1]);
			temp->elem[i*4+2][0] = (data->elem[i*4+0][0]) + (-data->elem[i*4+1][0]) + (data->elem[i*4+2][0]) + (-data->elem[i*4+3][0])
			;
			temp->elem[i*4+3][0] = (data->elem[i*4+0][0]) + (-data->elem[i*4+2][0])
			 + sign*(data->elem[i*4+1][1]) + (-sign)*(data->elem[i*4+3][1]);
			temp->elem[i*4+0][1] = 
			 + (data->elem[i*4+0][1]) + (data->elem[i*4+1][1]) + (data->elem[i*4+2][1]) + (data->elem[i*4+3][1]);
			temp->elem[i*4+1][1] = sign*(data->elem[i*4+1][0]) + (-sign)*(data->elem[i*4+3][0])
			 + (data->elem[i*4+0][1]) + (-data->elem[i*4+2][1]);
			temp->elem[i*4+2][1] = 
			 + (data->elem[i*4+0][1]) + (-data->elem[i*4+1][1]) + (data->elem[i*4+2][1]) + (-data->elem[i*4+3][1]);
			temp->elem[i*4+3][1] = (-sign)*(data->elem[i*4+1][0]) + sign*(data->elem[i*4+3][0])
			 + (data->elem[i*4+0][1]) + (-data->elem[i*4+2][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*4+0][0] = temp->elem[i*4+0][0];
			data->elem[i*4+1][0] = temp->elem[i*4+1][0];
			data->elem[i*4+2][0] = temp->elem[i*4+2][0];
			data->elem[i*4+3][0] = temp->elem[i*4+3][0];
			data->elem[i*4+0][1] = temp->elem[i*4+0][1];
			data->elem[i*4+1][1] = temp->elem[i*4+1][1];
			data->elem[i*4+2][1] = temp->elem[i*4+2][1];
			data->elem[i*4+3][1] = temp->elem[i*4+3][1];
		}
		return;
	  case 5:
		for(i=0;i<n;i++){
			temp->elem[i*5+0][0] = (data->elem[i*5+0][0]) + (data->elem[i*5+1][0]) + (data->elem[i*5+2][0]) + (data->elem[i*5+3][0]) + (data->elem[i*5+4][0])
			;
			temp->elem[i*5+1][0] = (data->elem[i*5+0][0]) + (3.09016994374947e-01)*(data->elem[i*5+1][0]) + (-8.09016994374947e-01)*(data->elem[i*5+2][0]) + (-8.09016994374947e-01)*(data->elem[i*5+3][0]) + (3.09016994374947e-01)*(data->elem[i*5+4][0])
			 + (-sign)*(9.51056516295154e-01)*(data->elem[i*5+1][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*5+2][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*5+3][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+2][0] = (data->elem[i*5+0][0]) + (-8.09016994374947e-01)*(data->elem[i*5+1][0]) + (3.09016994374947e-01)*(data->elem[i*5+2][0]) + (3.09016994374947e-01)*(data->elem[i*5+3][0]) + (-8.09016994374947e-01)*(data->elem[i*5+4][0])
			 + (-sign)*(5.87785252292473e-01)*(data->elem[i*5+1][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*5+2][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*5+3][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+3][0] = (data->elem[i*5+0][0]) + (-8.09016994374947e-01)*(data->elem[i*5+1][0]) + (3.09016994374947e-01)*(data->elem[i*5+2][0]) + (3.09016994374947e-01)*(data->elem[i*5+3][0]) + (-8.09016994374947e-01)*(data->elem[i*5+4][0])
			 + (-sign)*(-5.87785252292473e-01)*(data->elem[i*5+1][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*5+2][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*5+3][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+4][0] = (data->elem[i*5+0][0]) + (3.09016994374947e-01)*(data->elem[i*5+1][0]) + (-8.09016994374947e-01)*(data->elem[i*5+2][0]) + (-8.09016994374947e-01)*(data->elem[i*5+3][0]) + (3.09016994374947e-01)*(data->elem[i*5+4][0])
			 + (-sign)*(-9.51056516295154e-01)*(data->elem[i*5+1][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*5+2][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*5+3][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+0][1] = 
			 + (data->elem[i*5+0][1]) + (data->elem[i*5+1][1]) + (data->elem[i*5+2][1]) + (data->elem[i*5+3][1]) + (data->elem[i*5+4][1]);
			temp->elem[i*5+1][1] = sign*(9.51056516295154e-01)*(data->elem[i*5+1][0]) + sign*(5.87785252292473e-01)*(data->elem[i*5+2][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*5+3][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*5+4][0])
			 + (data->elem[i*5+0][1]) + (3.09016994374947e-01)*(data->elem[i*5+1][1]) + (-8.09016994374947e-01)*(data->elem[i*5+2][1]) + (-8.09016994374947e-01)*(data->elem[i*5+3][1]) + (3.09016994374947e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+2][1] = sign*(5.87785252292473e-01)*(data->elem[i*5+1][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*5+2][0]) + sign*(9.51056516295154e-01)*(data->elem[i*5+3][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*5+4][0])
			 + (data->elem[i*5+0][1]) + (-8.09016994374947e-01)*(data->elem[i*5+1][1]) + (3.09016994374947e-01)*(data->elem[i*5+2][1]) + (3.09016994374947e-01)*(data->elem[i*5+3][1]) + (-8.09016994374947e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+3][1] = sign*(-5.87785252292473e-01)*(data->elem[i*5+1][0]) + sign*(9.51056516295154e-01)*(data->elem[i*5+2][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*5+3][0]) + sign*(5.87785252292473e-01)*(data->elem[i*5+4][0])
			 + (data->elem[i*5+0][1]) + (-8.09016994374947e-01)*(data->elem[i*5+1][1]) + (3.09016994374947e-01)*(data->elem[i*5+2][1]) + (3.09016994374947e-01)*(data->elem[i*5+3][1]) + (-8.09016994374947e-01)*(data->elem[i*5+4][1]);
			temp->elem[i*5+4][1] = sign*(-9.51056516295154e-01)*(data->elem[i*5+1][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*5+2][0]) + sign*(5.87785252292473e-01)*(data->elem[i*5+3][0]) + sign*(9.51056516295154e-01)*(data->elem[i*5+4][0])
			 + (data->elem[i*5+0][1]) + (3.09016994374947e-01)*(data->elem[i*5+1][1]) + (-8.09016994374947e-01)*(data->elem[i*5+2][1]) + (-8.09016994374947e-01)*(data->elem[i*5+3][1]) + (3.09016994374947e-01)*(data->elem[i*5+4][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*5+0][0] = temp->elem[i*5+0][0];
			data->elem[i*5+1][0] = temp->elem[i*5+1][0];
			data->elem[i*5+2][0] = temp->elem[i*5+2][0];
			data->elem[i*5+3][0] = temp->elem[i*5+3][0];
			data->elem[i*5+4][0] = temp->elem[i*5+4][0];
			data->elem[i*5+0][1] = temp->elem[i*5+0][1];
			data->elem[i*5+1][1] = temp->elem[i*5+1][1];
			data->elem[i*5+2][1] = temp->elem[i*5+2][1];
			data->elem[i*5+3][1] = temp->elem[i*5+3][1];
			data->elem[i*5+4][1] = temp->elem[i*5+4][1];
		}
		return;
	  case 6:
		for(i=0;i<n;i++){
			temp->elem[i*6+0][0] = (data->elem[i*6+0][0]) + (data->elem[i*6+1][0]) + (data->elem[i*6+2][0]) + (data->elem[i*6+3][0]) + (data->elem[i*6+4][0]) + (data->elem[i*6+5][0])
			;
			temp->elem[i*6+1][0] = (data->elem[i*6+0][0]) + (5.00000000000000e-01)*(data->elem[i*6+1][0]) + (-5.00000000000000e-01)*(data->elem[i*6+2][0]) + (-data->elem[i*6+3][0]) + (-5.00000000000000e-01)*(data->elem[i*6+4][0]) + (5.00000000000000e-01)*(data->elem[i*6+5][0])
			 + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+1][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+4][1]) + (-sign)*(-8.66025403784439e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+2][0] = (data->elem[i*6+0][0]) + (-5.00000000000000e-01)*(data->elem[i*6+1][0]) + (-5.00000000000000e-01)*(data->elem[i*6+2][0]) + (data->elem[i*6+3][0]) + (-5.00000000000000e-01)*(data->elem[i*6+4][0]) + (-5.00000000000000e-01)*(data->elem[i*6+5][0])
			 + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+1][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+4][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+3][0] = (data->elem[i*6+0][0]) + (-data->elem[i*6+1][0]) + (data->elem[i*6+2][0]) + (-data->elem[i*6+3][0]) + (data->elem[i*6+4][0]) + (-data->elem[i*6+5][0])
			;
			temp->elem[i*6+4][0] = (data->elem[i*6+0][0]) + (-5.00000000000000e-01)*(data->elem[i*6+1][0]) + (-5.00000000000000e-01)*(data->elem[i*6+2][0]) + (data->elem[i*6+3][0]) + (-5.00000000000000e-01)*(data->elem[i*6+4][0]) + (-5.00000000000000e-01)*(data->elem[i*6+5][0])
			 + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+1][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+4][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+5][0] = (data->elem[i*6+0][0]) + (5.00000000000000e-01)*(data->elem[i*6+1][0]) + (-5.00000000000000e-01)*(data->elem[i*6+2][0]) + (-data->elem[i*6+3][0]) + (-5.00000000000000e-01)*(data->elem[i*6+4][0]) + (5.00000000000000e-01)*(data->elem[i*6+5][0])
			 + (-sign)*(-8.66025403784439e-01)*(data->elem[i*6+1][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*6+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+4][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+0][1] = 
			 + (data->elem[i*6+0][1]) + (data->elem[i*6+1][1]) + (data->elem[i*6+2][1]) + (data->elem[i*6+3][1]) + (data->elem[i*6+4][1]) + (data->elem[i*6+5][1]);
			temp->elem[i*6+1][1] = sign*(8.66025403784439e-01)*(data->elem[i*6+1][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*6+4][0]) + sign*(-8.66025403784439e-01)*(data->elem[i*6+5][0])
			 + (data->elem[i*6+0][1]) + (5.00000000000000e-01)*(data->elem[i*6+1][1]) + (-5.00000000000000e-01)*(data->elem[i*6+2][1]) + (-data->elem[i*6+3][1]) + (-5.00000000000000e-01)*(data->elem[i*6+4][1]) + (5.00000000000000e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+2][1] = sign*(8.66025403784439e-01)*(data->elem[i*6+1][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*6+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+4][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*6+5][0])
			 + (data->elem[i*6+0][1]) + (-5.00000000000000e-01)*(data->elem[i*6+1][1]) + (-5.00000000000000e-01)*(data->elem[i*6+2][1]) + (data->elem[i*6+3][1]) + (-5.00000000000000e-01)*(data->elem[i*6+4][1]) + (-5.00000000000000e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+3][1] = 
			 + (data->elem[i*6+0][1]) + (-data->elem[i*6+1][1]) + (data->elem[i*6+2][1]) + (-data->elem[i*6+3][1]) + (data->elem[i*6+4][1]) + (-data->elem[i*6+5][1]);
			temp->elem[i*6+4][1] = sign*(-8.66025403784438e-01)*(data->elem[i*6+1][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*6+4][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+5][0])
			 + (data->elem[i*6+0][1]) + (-5.00000000000000e-01)*(data->elem[i*6+1][1]) + (-5.00000000000000e-01)*(data->elem[i*6+2][1]) + (data->elem[i*6+3][1]) + (-5.00000000000000e-01)*(data->elem[i*6+4][1]) + (-5.00000000000000e-01)*(data->elem[i*6+5][1]);
			temp->elem[i*6+5][1] = sign*(-8.66025403784439e-01)*(data->elem[i*6+1][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*6+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+4][0]) + sign*(8.66025403784439e-01)*(data->elem[i*6+5][0])
			 + (data->elem[i*6+0][1]) + (5.00000000000000e-01)*(data->elem[i*6+1][1]) + (-5.00000000000000e-01)*(data->elem[i*6+2][1]) + (-data->elem[i*6+3][1]) + (-5.00000000000000e-01)*(data->elem[i*6+4][1]) + (5.00000000000000e-01)*(data->elem[i*6+5][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*6+0][0] = temp->elem[i*6+0][0];
			data->elem[i*6+1][0] = temp->elem[i*6+1][0];
			data->elem[i*6+2][0] = temp->elem[i*6+2][0];
			data->elem[i*6+3][0] = temp->elem[i*6+3][0];
			data->elem[i*6+4][0] = temp->elem[i*6+4][0];
			data->elem[i*6+5][0] = temp->elem[i*6+5][0];
			data->elem[i*6+0][1] = temp->elem[i*6+0][1];
			data->elem[i*6+1][1] = temp->elem[i*6+1][1];
			data->elem[i*6+2][1] = temp->elem[i*6+2][1];
			data->elem[i*6+3][1] = temp->elem[i*6+3][1];
			data->elem[i*6+4][1] = temp->elem[i*6+4][1];
			data->elem[i*6+5][1] = temp->elem[i*6+5][1];
		}
		return;
	  case 7:
		for(i=0;i<n;i++){
			temp->elem[i*7+0][0] = (data->elem[i*7+0][0]) + (data->elem[i*7+1][0]) + (data->elem[i*7+2][0]) + (data->elem[i*7+3][0]) + (data->elem[i*7+4][0]) + (data->elem[i*7+5][0]) + (data->elem[i*7+6][0])
			;
			temp->elem[i*7+1][0] = (data->elem[i*7+0][0]) + (6.23489801858734e-01)*(data->elem[i*7+1][0]) + (-2.22520933956314e-01)*(data->elem[i*7+2][0]) + (-9.00968867902419e-01)*(data->elem[i*7+3][0]) + (-9.00968867902419e-01)*(data->elem[i*7+4][0]) + (-2.22520933956315e-01)*(data->elem[i*7+5][0]) + (6.23489801858733e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+1][1]) + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+2][1]) + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+3][1]) + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+4][1]) + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+5][1]) + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+2][0] = (data->elem[i*7+0][0]) + (-2.22520933956314e-01)*(data->elem[i*7+1][0]) + (-9.00968867902419e-01)*(data->elem[i*7+2][0]) + (6.23489801858733e-01)*(data->elem[i*7+3][0]) + (6.23489801858734e-01)*(data->elem[i*7+4][0]) + (-9.00968867902419e-01)*(data->elem[i*7+5][0]) + (-2.22520933956315e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+1][1]) + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+2][1]) + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+3][1]) + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+4][1]) + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+5][1]) + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+3][0] = (data->elem[i*7+0][0]) + (-9.00968867902419e-01)*(data->elem[i*7+1][0]) + (6.23489801858733e-01)*(data->elem[i*7+2][0]) + (-2.22520933956314e-01)*(data->elem[i*7+3][0]) + (-2.22520933956315e-01)*(data->elem[i*7+4][0]) + (6.23489801858734e-01)*(data->elem[i*7+5][0]) + (-9.00968867902419e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+1][1]) + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+2][1]) + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+3][1]) + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+4][1]) + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+5][1]) + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+4][0] = (data->elem[i*7+0][0]) + (-9.00968867902419e-01)*(data->elem[i*7+1][0]) + (6.23489801858734e-01)*(data->elem[i*7+2][0]) + (-2.22520933956315e-01)*(data->elem[i*7+3][0]) + (-2.22520933956314e-01)*(data->elem[i*7+4][0]) + (6.23489801858733e-01)*(data->elem[i*7+5][0]) + (-9.00968867902419e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+1][1]) + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+2][1]) + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+3][1]) + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+4][1]) + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+5][1]) + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+5][0] = (data->elem[i*7+0][0]) + (-2.22520933956315e-01)*(data->elem[i*7+1][0]) + (-9.00968867902419e-01)*(data->elem[i*7+2][0]) + (6.23489801858734e-01)*(data->elem[i*7+3][0]) + (6.23489801858733e-01)*(data->elem[i*7+4][0]) + (-9.00968867902419e-01)*(data->elem[i*7+5][0]) + (-2.22520933956314e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+1][1]) + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+2][1]) + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+3][1]) + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+4][1]) + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+5][1]) + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+6][0] = (data->elem[i*7+0][0]) + (6.23489801858733e-01)*(data->elem[i*7+1][0]) + (-2.22520933956315e-01)*(data->elem[i*7+2][0]) + (-9.00968867902419e-01)*(data->elem[i*7+3][0]) + (-9.00968867902419e-01)*(data->elem[i*7+4][0]) + (-2.22520933956314e-01)*(data->elem[i*7+5][0]) + (6.23489801858734e-01)*(data->elem[i*7+6][0])
			 + (-sign)*(-7.81831482468030e-01)*(data->elem[i*7+1][1]) + (-sign)*(-9.74927912181824e-01)*(data->elem[i*7+2][1]) + (-sign)*(-4.33883739117558e-01)*(data->elem[i*7+3][1]) + (-sign)*(4.33883739117558e-01)*(data->elem[i*7+4][1]) + (-sign)*(9.74927912181824e-01)*(data->elem[i*7+5][1]) + (-sign)*(7.81831482468030e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+0][1] = 
			 + (data->elem[i*7+0][1]) + (data->elem[i*7+1][1]) + (data->elem[i*7+2][1]) + (data->elem[i*7+3][1]) + (data->elem[i*7+4][1]) + (data->elem[i*7+5][1]) + (data->elem[i*7+6][1]);
			temp->elem[i*7+1][1] = sign*(7.81831482468030e-01)*(data->elem[i*7+1][0]) + sign*(9.74927912181824e-01)*(data->elem[i*7+2][0]) + sign*(4.33883739117558e-01)*(data->elem[i*7+3][0]) + sign*(-4.33883739117558e-01)*(data->elem[i*7+4][0]) + sign*(-9.74927912181824e-01)*(data->elem[i*7+5][0]) + sign*(-7.81831482468030e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (6.23489801858734e-01)*(data->elem[i*7+1][1]) + (-2.22520933956314e-01)*(data->elem[i*7+2][1]) + (-9.00968867902419e-01)*(data->elem[i*7+3][1]) + (-9.00968867902419e-01)*(data->elem[i*7+4][1]) + (-2.22520933956315e-01)*(data->elem[i*7+5][1]) + (6.23489801858733e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+2][1] = sign*(9.74927912181824e-01)*(data->elem[i*7+1][0]) + sign*(-4.33883739117558e-01)*(data->elem[i*7+2][0]) + sign*(-7.81831482468030e-01)*(data->elem[i*7+3][0]) + sign*(7.81831482468030e-01)*(data->elem[i*7+4][0]) + sign*(4.33883739117558e-01)*(data->elem[i*7+5][0]) + sign*(-9.74927912181824e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (-2.22520933956314e-01)*(data->elem[i*7+1][1]) + (-9.00968867902419e-01)*(data->elem[i*7+2][1]) + (6.23489801858733e-01)*(data->elem[i*7+3][1]) + (6.23489801858734e-01)*(data->elem[i*7+4][1]) + (-9.00968867902419e-01)*(data->elem[i*7+5][1]) + (-2.22520933956315e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+3][1] = sign*(4.33883739117558e-01)*(data->elem[i*7+1][0]) + sign*(-7.81831482468030e-01)*(data->elem[i*7+2][0]) + sign*(9.74927912181824e-01)*(data->elem[i*7+3][0]) + sign*(-9.74927912181824e-01)*(data->elem[i*7+4][0]) + sign*(7.81831482468030e-01)*(data->elem[i*7+5][0]) + sign*(-4.33883739117558e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (-9.00968867902419e-01)*(data->elem[i*7+1][1]) + (6.23489801858733e-01)*(data->elem[i*7+2][1]) + (-2.22520933956314e-01)*(data->elem[i*7+3][1]) + (-2.22520933956315e-01)*(data->elem[i*7+4][1]) + (6.23489801858734e-01)*(data->elem[i*7+5][1]) + (-9.00968867902419e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+4][1] = sign*(-4.33883739117558e-01)*(data->elem[i*7+1][0]) + sign*(7.81831482468030e-01)*(data->elem[i*7+2][0]) + sign*(-9.74927912181824e-01)*(data->elem[i*7+3][0]) + sign*(9.74927912181824e-01)*(data->elem[i*7+4][0]) + sign*(-7.81831482468030e-01)*(data->elem[i*7+5][0]) + sign*(4.33883739117558e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (-9.00968867902419e-01)*(data->elem[i*7+1][1]) + (6.23489801858734e-01)*(data->elem[i*7+2][1]) + (-2.22520933956315e-01)*(data->elem[i*7+3][1]) + (-2.22520933956314e-01)*(data->elem[i*7+4][1]) + (6.23489801858733e-01)*(data->elem[i*7+5][1]) + (-9.00968867902419e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+5][1] = sign*(-9.74927912181824e-01)*(data->elem[i*7+1][0]) + sign*(4.33883739117558e-01)*(data->elem[i*7+2][0]) + sign*(7.81831482468030e-01)*(data->elem[i*7+3][0]) + sign*(-7.81831482468030e-01)*(data->elem[i*7+4][0]) + sign*(-4.33883739117558e-01)*(data->elem[i*7+5][0]) + sign*(9.74927912181824e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (-2.22520933956315e-01)*(data->elem[i*7+1][1]) + (-9.00968867902419e-01)*(data->elem[i*7+2][1]) + (6.23489801858734e-01)*(data->elem[i*7+3][1]) + (6.23489801858733e-01)*(data->elem[i*7+4][1]) + (-9.00968867902419e-01)*(data->elem[i*7+5][1]) + (-2.22520933956314e-01)*(data->elem[i*7+6][1]);
			temp->elem[i*7+6][1] = sign*(-7.81831482468030e-01)*(data->elem[i*7+1][0]) + sign*(-9.74927912181824e-01)*(data->elem[i*7+2][0]) + sign*(-4.33883739117558e-01)*(data->elem[i*7+3][0]) + sign*(4.33883739117558e-01)*(data->elem[i*7+4][0]) + sign*(9.74927912181824e-01)*(data->elem[i*7+5][0]) + sign*(7.81831482468030e-01)*(data->elem[i*7+6][0])
			 + (data->elem[i*7+0][1]) + (6.23489801858733e-01)*(data->elem[i*7+1][1]) + (-2.22520933956315e-01)*(data->elem[i*7+2][1]) + (-9.00968867902419e-01)*(data->elem[i*7+3][1]) + (-9.00968867902419e-01)*(data->elem[i*7+4][1]) + (-2.22520933956314e-01)*(data->elem[i*7+5][1]) + (6.23489801858734e-01)*(data->elem[i*7+6][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*7+0][0] = temp->elem[i*7+0][0];
			data->elem[i*7+1][0] = temp->elem[i*7+1][0];
			data->elem[i*7+2][0] = temp->elem[i*7+2][0];
			data->elem[i*7+3][0] = temp->elem[i*7+3][0];
			data->elem[i*7+4][0] = temp->elem[i*7+4][0];
			data->elem[i*7+5][0] = temp->elem[i*7+5][0];
			data->elem[i*7+6][0] = temp->elem[i*7+6][0];
			data->elem[i*7+0][1] = temp->elem[i*7+0][1];
			data->elem[i*7+1][1] = temp->elem[i*7+1][1];
			data->elem[i*7+2][1] = temp->elem[i*7+2][1];
			data->elem[i*7+3][1] = temp->elem[i*7+3][1];
			data->elem[i*7+4][1] = temp->elem[i*7+4][1];
			data->elem[i*7+5][1] = temp->elem[i*7+5][1];
			data->elem[i*7+6][1] = temp->elem[i*7+6][1];
		}
		return;
	  case 8:
		for(i=0;i<n;i++){
			temp->elem[i*8+0][0] = (data->elem[i*8+0][0]) + (data->elem[i*8+1][0]) + (data->elem[i*8+2][0]) + (data->elem[i*8+3][0]) + (data->elem[i*8+4][0]) + (data->elem[i*8+5][0]) + (data->elem[i*8+6][0]) + (data->elem[i*8+7][0])
			;
			temp->elem[i*8+1][0] = (data->elem[i*8+0][0]) + (7.07106781186548e-01)*(data->elem[i*8+1][0]) + (-7.07106781186547e-01)*(data->elem[i*8+3][0]) + (-data->elem[i*8+4][0]) + (-7.07106781186548e-01)*(data->elem[i*8+5][0]) + (7.07106781186547e-01)*(data->elem[i*8+7][0])
			 + (-sign)*(7.07106781186547e-01)*(data->elem[i*8+1][1]) + (-sign)*(data->elem[i*8+2][1]) + (-sign)*(7.07106781186548e-01)*(data->elem[i*8+3][1]) + (-sign)*(-7.07106781186547e-01)*(data->elem[i*8+5][1]) + sign*(data->elem[i*8+6][1]) + (-sign)*(-7.07106781186548e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+2][0] = (data->elem[i*8+0][0]) + (-data->elem[i*8+2][0]) + (data->elem[i*8+4][0]) + (-data->elem[i*8+6][0])
			 + (-sign)*(data->elem[i*8+1][1]) + sign*(data->elem[i*8+3][1]) + (-sign)*(data->elem[i*8+5][1]) + sign*(data->elem[i*8+7][1]);
			temp->elem[i*8+3][0] = (data->elem[i*8+0][0]) + (-7.07106781186547e-01)*(data->elem[i*8+1][0]) + (7.07106781186548e-01)*(data->elem[i*8+3][0]) + (-data->elem[i*8+4][0]) + (7.07106781186547e-01)*(data->elem[i*8+5][0]) + (-7.07106781186548e-01)*(data->elem[i*8+7][0])
			 + (-sign)*(7.07106781186548e-01)*(data->elem[i*8+1][1]) + sign*(data->elem[i*8+2][1]) + (-sign)*(7.07106781186547e-01)*(data->elem[i*8+3][1]) + (-sign)*(-7.07106781186548e-01)*(data->elem[i*8+5][1]) + (-sign)*(data->elem[i*8+6][1]) + (-sign)*(-7.07106781186547e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+4][0] = (data->elem[i*8+0][0]) + (-data->elem[i*8+1][0]) + (data->elem[i*8+2][0]) + (-data->elem[i*8+3][0]) + (data->elem[i*8+4][0]) + (-data->elem[i*8+5][0]) + (data->elem[i*8+6][0]) + (-data->elem[i*8+7][0])
			;
			temp->elem[i*8+5][0] = (data->elem[i*8+0][0]) + (-7.07106781186548e-01)*(data->elem[i*8+1][0]) + (7.07106781186547e-01)*(data->elem[i*8+3][0]) + (-data->elem[i*8+4][0]) + (7.07106781186548e-01)*(data->elem[i*8+5][0]) + (-7.07106781186547e-01)*(data->elem[i*8+7][0])
			 + (-sign)*(-7.07106781186547e-01)*(data->elem[i*8+1][1]) + (-sign)*(data->elem[i*8+2][1]) + (-sign)*(-7.07106781186548e-01)*(data->elem[i*8+3][1]) + (-sign)*(7.07106781186547e-01)*(data->elem[i*8+5][1]) + sign*(data->elem[i*8+6][1]) + (-sign)*(7.07106781186548e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+6][0] = (data->elem[i*8+0][0]) + (-data->elem[i*8+2][0]) + (data->elem[i*8+4][0]) + (-data->elem[i*8+6][0])
			 + sign*(data->elem[i*8+1][1]) + (-sign)*(data->elem[i*8+3][1]) + sign*(data->elem[i*8+5][1]) + (-sign)*(data->elem[i*8+7][1]);
			temp->elem[i*8+7][0] = (data->elem[i*8+0][0]) + (7.07106781186547e-01)*(data->elem[i*8+1][0]) + (-7.07106781186548e-01)*(data->elem[i*8+3][0]) + (-data->elem[i*8+4][0]) + (-7.07106781186547e-01)*(data->elem[i*8+5][0]) + (7.07106781186548e-01)*(data->elem[i*8+7][0])
			 + (-sign)*(-7.07106781186548e-01)*(data->elem[i*8+1][1]) + sign*(data->elem[i*8+2][1]) + (-sign)*(-7.07106781186547e-01)*(data->elem[i*8+3][1]) + (-sign)*(7.07106781186548e-01)*(data->elem[i*8+5][1]) + (-sign)*(data->elem[i*8+6][1]) + (-sign)*(7.07106781186547e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+0][1] = 
			 + (data->elem[i*8+0][1]) + (data->elem[i*8+1][1]) + (data->elem[i*8+2][1]) + (data->elem[i*8+3][1]) + (data->elem[i*8+4][1]) + (data->elem[i*8+5][1]) + (data->elem[i*8+6][1]) + (data->elem[i*8+7][1]);
			temp->elem[i*8+1][1] = sign*(7.07106781186547e-01)*(data->elem[i*8+1][0]) + sign*(data->elem[i*8+2][0]) + sign*(7.07106781186548e-01)*(data->elem[i*8+3][0]) + sign*(-7.07106781186547e-01)*(data->elem[i*8+5][0]) + (-sign)*(data->elem[i*8+6][0]) + sign*(-7.07106781186548e-01)*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (7.07106781186548e-01)*(data->elem[i*8+1][1]) + (-7.07106781186547e-01)*(data->elem[i*8+3][1]) + (-data->elem[i*8+4][1]) + (-7.07106781186548e-01)*(data->elem[i*8+5][1]) + (7.07106781186547e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+2][1] = sign*(data->elem[i*8+1][0]) + (-sign)*(data->elem[i*8+3][0]) + sign*(data->elem[i*8+5][0]) + (-sign)*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (-data->elem[i*8+2][1]) + (data->elem[i*8+4][1]) + (-data->elem[i*8+6][1]);
			temp->elem[i*8+3][1] = sign*(7.07106781186548e-01)*(data->elem[i*8+1][0]) + (-sign)*(data->elem[i*8+2][0]) + sign*(7.07106781186547e-01)*(data->elem[i*8+3][0]) + sign*(-7.07106781186548e-01)*(data->elem[i*8+5][0]) + sign*(data->elem[i*8+6][0]) + sign*(-7.07106781186547e-01)*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (-7.07106781186547e-01)*(data->elem[i*8+1][1]) + (7.07106781186548e-01)*(data->elem[i*8+3][1]) + (-data->elem[i*8+4][1]) + (7.07106781186547e-01)*(data->elem[i*8+5][1]) + (-7.07106781186548e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+4][1] = 
			 + (data->elem[i*8+0][1]) + (-data->elem[i*8+1][1]) + (data->elem[i*8+2][1]) + (-data->elem[i*8+3][1]) + (data->elem[i*8+4][1]) + (-data->elem[i*8+5][1]) + (data->elem[i*8+6][1]) + (-data->elem[i*8+7][1]);
			temp->elem[i*8+5][1] = sign*(-7.07106781186547e-01)*(data->elem[i*8+1][0]) + sign*(data->elem[i*8+2][0]) + sign*(-7.07106781186548e-01)*(data->elem[i*8+3][0]) + sign*(7.07106781186547e-01)*(data->elem[i*8+5][0]) + (-sign)*(data->elem[i*8+6][0]) + sign*(7.07106781186548e-01)*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (-7.07106781186548e-01)*(data->elem[i*8+1][1]) + (7.07106781186547e-01)*(data->elem[i*8+3][1]) + (-data->elem[i*8+4][1]) + (7.07106781186548e-01)*(data->elem[i*8+5][1]) + (-7.07106781186547e-01)*(data->elem[i*8+7][1]);
			temp->elem[i*8+6][1] = (-sign)*(data->elem[i*8+1][0]) + sign*(data->elem[i*8+3][0]) + (-sign)*(data->elem[i*8+5][0]) + sign*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (-data->elem[i*8+2][1]) + (data->elem[i*8+4][1]) + (-data->elem[i*8+6][1]);
			temp->elem[i*8+7][1] = sign*(-7.07106781186548e-01)*(data->elem[i*8+1][0]) + (-sign)*(data->elem[i*8+2][0]) + sign*(-7.07106781186547e-01)*(data->elem[i*8+3][0]) + sign*(7.07106781186548e-01)*(data->elem[i*8+5][0]) + sign*(data->elem[i*8+6][0]) + sign*(7.07106781186547e-01)*(data->elem[i*8+7][0])
			 + (data->elem[i*8+0][1]) + (7.07106781186547e-01)*(data->elem[i*8+1][1]) + (-7.07106781186548e-01)*(data->elem[i*8+3][1]) + (-data->elem[i*8+4][1]) + (-7.07106781186547e-01)*(data->elem[i*8+5][1]) + (7.07106781186548e-01)*(data->elem[i*8+7][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*8+0][0] = temp->elem[i*8+0][0];
			data->elem[i*8+1][0] = temp->elem[i*8+1][0];
			data->elem[i*8+2][0] = temp->elem[i*8+2][0];
			data->elem[i*8+3][0] = temp->elem[i*8+3][0];
			data->elem[i*8+4][0] = temp->elem[i*8+4][0];
			data->elem[i*8+5][0] = temp->elem[i*8+5][0];
			data->elem[i*8+6][0] = temp->elem[i*8+6][0];
			data->elem[i*8+7][0] = temp->elem[i*8+7][0];
			data->elem[i*8+0][1] = temp->elem[i*8+0][1];
			data->elem[i*8+1][1] = temp->elem[i*8+1][1];
			data->elem[i*8+2][1] = temp->elem[i*8+2][1];
			data->elem[i*8+3][1] = temp->elem[i*8+3][1];
			data->elem[i*8+4][1] = temp->elem[i*8+4][1];
			data->elem[i*8+5][1] = temp->elem[i*8+5][1];
			data->elem[i*8+6][1] = temp->elem[i*8+6][1];
			data->elem[i*8+7][1] = temp->elem[i*8+7][1];
		}
		return;
	  case 9:
		for(i=0;i<n;i++){
			temp->elem[i*9+0][0] = (data->elem[i*9+0][0]) + (data->elem[i*9+1][0]) + (data->elem[i*9+2][0]) + (data->elem[i*9+3][0]) + (data->elem[i*9+4][0]) + (data->elem[i*9+5][0]) + (data->elem[i*9+6][0]) + (data->elem[i*9+7][0]) + (data->elem[i*9+8][0])
			;
			temp->elem[i*9+1][0] = (data->elem[i*9+0][0]) + (7.66044443118978e-01)*(data->elem[i*9+1][0]) + (1.73648177666930e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (-9.39692620785908e-01)*(data->elem[i*9+4][0]) + (-9.39692620785908e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (1.73648177666930e-01)*(data->elem[i*9+7][0]) + (7.66044443118978e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+1][1]) + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+3][1]) + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+4][1]) + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+5][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+6][1]) + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+7][1]) + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+2][0] = (data->elem[i*9+0][0]) + (1.73648177666930e-01)*(data->elem[i*9+1][0]) + (-9.39692620785908e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (7.66044443118978e-01)*(data->elem[i*9+4][0]) + (7.66044443118978e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (-9.39692620785908e-01)*(data->elem[i*9+7][0]) + (1.73648177666930e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+1][1]) + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+3][1]) + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+4][1]) + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+5][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+6][1]) + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+7][1]) + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+3][0] = (data->elem[i*9+0][0]) + (-5.00000000000000e-01)*(data->elem[i*9+1][0]) + (-5.00000000000000e-01)*(data->elem[i*9+2][0]) + (data->elem[i*9+3][0]) + (-5.00000000000000e-01)*(data->elem[i*9+4][0]) + (-5.00000000000000e-01)*(data->elem[i*9+5][0]) + (data->elem[i*9+6][0]) + (-5.00000000000000e-01)*(data->elem[i*9+7][0]) + (-5.00000000000000e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+1][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+4][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+5][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+7][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+4][0] = (data->elem[i*9+0][0]) + (-9.39692620785908e-01)*(data->elem[i*9+1][0]) + (7.66044443118978e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (1.73648177666930e-01)*(data->elem[i*9+4][0]) + (1.73648177666930e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (7.66044443118978e-01)*(data->elem[i*9+7][0]) + (-9.39692620785908e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+1][1]) + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+3][1]) + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+4][1]) + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+5][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+6][1]) + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+7][1]) + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+5][0] = (data->elem[i*9+0][0]) + (-9.39692620785908e-01)*(data->elem[i*9+1][0]) + (7.66044443118978e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (1.73648177666930e-01)*(data->elem[i*9+4][0]) + (1.73648177666930e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (7.66044443118978e-01)*(data->elem[i*9+7][0]) + (-9.39692620785908e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+1][1]) + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+3][1]) + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+4][1]) + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+5][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+6][1]) + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+7][1]) + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+6][0] = (data->elem[i*9+0][0]) + (-5.00000000000000e-01)*(data->elem[i*9+1][0]) + (-5.00000000000000e-01)*(data->elem[i*9+2][0]) + (data->elem[i*9+3][0]) + (-5.00000000000000e-01)*(data->elem[i*9+4][0]) + (-5.00000000000000e-01)*(data->elem[i*9+5][0]) + (data->elem[i*9+6][0]) + (-5.00000000000000e-01)*(data->elem[i*9+7][0]) + (-5.00000000000000e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+1][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+4][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+5][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+7][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+7][0] = (data->elem[i*9+0][0]) + (1.73648177666930e-01)*(data->elem[i*9+1][0]) + (-9.39692620785908e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (7.66044443118978e-01)*(data->elem[i*9+4][0]) + (7.66044443118978e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (-9.39692620785908e-01)*(data->elem[i*9+7][0]) + (1.73648177666930e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+1][1]) + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+2][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+3][1]) + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+4][1]) + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+5][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+6][1]) + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+7][1]) + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+8][0] = (data->elem[i*9+0][0]) + (7.66044443118978e-01)*(data->elem[i*9+1][0]) + (1.73648177666930e-01)*(data->elem[i*9+2][0]) + (-5.00000000000000e-01)*(data->elem[i*9+3][0]) + (-9.39692620785908e-01)*(data->elem[i*9+4][0]) + (-9.39692620785908e-01)*(data->elem[i*9+5][0]) + (-5.00000000000000e-01)*(data->elem[i*9+6][0]) + (1.73648177666930e-01)*(data->elem[i*9+7][0]) + (7.66044443118978e-01)*(data->elem[i*9+8][0])
			 + (-sign)*(-6.42787609686540e-01)*(data->elem[i*9+1][1]) + (-sign)*(-9.84807753012208e-01)*(data->elem[i*9+2][1]) + (-sign)*(-8.66025403784438e-01)*(data->elem[i*9+3][1]) + (-sign)*(-3.42020143325669e-01)*(data->elem[i*9+4][1]) + (-sign)*(3.42020143325669e-01)*(data->elem[i*9+5][1]) + (-sign)*(8.66025403784439e-01)*(data->elem[i*9+6][1]) + (-sign)*(9.84807753012208e-01)*(data->elem[i*9+7][1]) + (-sign)*(6.42787609686539e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+0][1] = 
			 + (data->elem[i*9+0][1]) + (data->elem[i*9+1][1]) + (data->elem[i*9+2][1]) + (data->elem[i*9+3][1]) + (data->elem[i*9+4][1]) + (data->elem[i*9+5][1]) + (data->elem[i*9+6][1]) + (data->elem[i*9+7][1]) + (data->elem[i*9+8][1]);
			temp->elem[i*9+1][1] = sign*(6.42787609686539e-01)*(data->elem[i*9+1][0]) + sign*(9.84807753012208e-01)*(data->elem[i*9+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+3][0]) + sign*(3.42020143325669e-01)*(data->elem[i*9+4][0]) + sign*(-3.42020143325669e-01)*(data->elem[i*9+5][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+6][0]) + sign*(-9.84807753012208e-01)*(data->elem[i*9+7][0]) + sign*(-6.42787609686540e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (7.66044443118978e-01)*(data->elem[i*9+1][1]) + (1.73648177666930e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (-9.39692620785908e-01)*(data->elem[i*9+4][1]) + (-9.39692620785908e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (1.73648177666930e-01)*(data->elem[i*9+7][1]) + (7.66044443118978e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+2][1] = sign*(9.84807753012208e-01)*(data->elem[i*9+1][0]) + sign*(3.42020143325669e-01)*(data->elem[i*9+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+3][0]) + sign*(-6.42787609686540e-01)*(data->elem[i*9+4][0]) + sign*(6.42787609686539e-01)*(data->elem[i*9+5][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+6][0]) + sign*(-3.42020143325669e-01)*(data->elem[i*9+7][0]) + sign*(-9.84807753012208e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (1.73648177666930e-01)*(data->elem[i*9+1][1]) + (-9.39692620785908e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (7.66044443118978e-01)*(data->elem[i*9+4][1]) + (7.66044443118978e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (-9.39692620785908e-01)*(data->elem[i*9+7][1]) + (1.73648177666930e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+3][1] = sign*(8.66025403784439e-01)*(data->elem[i*9+1][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+4][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+5][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+7][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (-5.00000000000000e-01)*(data->elem[i*9+1][1]) + (-5.00000000000000e-01)*(data->elem[i*9+2][1]) + (data->elem[i*9+3][1]) + (-5.00000000000000e-01)*(data->elem[i*9+4][1]) + (-5.00000000000000e-01)*(data->elem[i*9+5][1]) + (data->elem[i*9+6][1]) + (-5.00000000000000e-01)*(data->elem[i*9+7][1]) + (-5.00000000000000e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+4][1] = sign*(3.42020143325669e-01)*(data->elem[i*9+1][0]) + sign*(-6.42787609686540e-01)*(data->elem[i*9+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+3][0]) + sign*(-9.84807753012208e-01)*(data->elem[i*9+4][0]) + sign*(9.84807753012208e-01)*(data->elem[i*9+5][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+6][0]) + sign*(6.42787609686539e-01)*(data->elem[i*9+7][0]) + sign*(-3.42020143325669e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (-9.39692620785908e-01)*(data->elem[i*9+1][1]) + (7.66044443118978e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (1.73648177666930e-01)*(data->elem[i*9+4][1]) + (1.73648177666930e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (7.66044443118978e-01)*(data->elem[i*9+7][1]) + (-9.39692620785908e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+5][1] = sign*(-3.42020143325669e-01)*(data->elem[i*9+1][0]) + sign*(6.42787609686539e-01)*(data->elem[i*9+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+3][0]) + sign*(9.84807753012208e-01)*(data->elem[i*9+4][0]) + sign*(-9.84807753012208e-01)*(data->elem[i*9+5][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+6][0]) + sign*(-6.42787609686540e-01)*(data->elem[i*9+7][0]) + sign*(3.42020143325669e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (-9.39692620785908e-01)*(data->elem[i*9+1][1]) + (7.66044443118978e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (1.73648177666930e-01)*(data->elem[i*9+4][1]) + (1.73648177666930e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (7.66044443118978e-01)*(data->elem[i*9+7][1]) + (-9.39692620785908e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+6][1] = sign*(-8.66025403784438e-01)*(data->elem[i*9+1][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+4][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+5][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+7][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (-5.00000000000000e-01)*(data->elem[i*9+1][1]) + (-5.00000000000000e-01)*(data->elem[i*9+2][1]) + (data->elem[i*9+3][1]) + (-5.00000000000000e-01)*(data->elem[i*9+4][1]) + (-5.00000000000000e-01)*(data->elem[i*9+5][1]) + (data->elem[i*9+6][1]) + (-5.00000000000000e-01)*(data->elem[i*9+7][1]) + (-5.00000000000000e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+7][1] = sign*(-9.84807753012208e-01)*(data->elem[i*9+1][0]) + sign*(-3.42020143325669e-01)*(data->elem[i*9+2][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+3][0]) + sign*(6.42787609686539e-01)*(data->elem[i*9+4][0]) + sign*(-6.42787609686540e-01)*(data->elem[i*9+5][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+6][0]) + sign*(3.42020143325669e-01)*(data->elem[i*9+7][0]) + sign*(9.84807753012208e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (1.73648177666930e-01)*(data->elem[i*9+1][1]) + (-9.39692620785908e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (7.66044443118978e-01)*(data->elem[i*9+4][1]) + (7.66044443118978e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (-9.39692620785908e-01)*(data->elem[i*9+7][1]) + (1.73648177666930e-01)*(data->elem[i*9+8][1]);
			temp->elem[i*9+8][1] = sign*(-6.42787609686540e-01)*(data->elem[i*9+1][0]) + sign*(-9.84807753012208e-01)*(data->elem[i*9+2][0]) + sign*(-8.66025403784438e-01)*(data->elem[i*9+3][0]) + sign*(-3.42020143325669e-01)*(data->elem[i*9+4][0]) + sign*(3.42020143325669e-01)*(data->elem[i*9+5][0]) + sign*(8.66025403784439e-01)*(data->elem[i*9+6][0]) + sign*(9.84807753012208e-01)*(data->elem[i*9+7][0]) + sign*(6.42787609686539e-01)*(data->elem[i*9+8][0])
			 + (data->elem[i*9+0][1]) + (7.66044443118978e-01)*(data->elem[i*9+1][1]) + (1.73648177666930e-01)*(data->elem[i*9+2][1]) + (-5.00000000000000e-01)*(data->elem[i*9+3][1]) + (-9.39692620785908e-01)*(data->elem[i*9+4][1]) + (-9.39692620785908e-01)*(data->elem[i*9+5][1]) + (-5.00000000000000e-01)*(data->elem[i*9+6][1]) + (1.73648177666930e-01)*(data->elem[i*9+7][1]) + (7.66044443118978e-01)*(data->elem[i*9+8][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*9+0][0] = temp->elem[i*9+0][0];
			data->elem[i*9+1][0] = temp->elem[i*9+1][0];
			data->elem[i*9+2][0] = temp->elem[i*9+2][0];
			data->elem[i*9+3][0] = temp->elem[i*9+3][0];
			data->elem[i*9+4][0] = temp->elem[i*9+4][0];
			data->elem[i*9+5][0] = temp->elem[i*9+5][0];
			data->elem[i*9+6][0] = temp->elem[i*9+6][0];
			data->elem[i*9+7][0] = temp->elem[i*9+7][0];
			data->elem[i*9+8][0] = temp->elem[i*9+8][0];
			data->elem[i*9+0][1] = temp->elem[i*9+0][1];
			data->elem[i*9+1][1] = temp->elem[i*9+1][1];
			data->elem[i*9+2][1] = temp->elem[i*9+2][1];
			data->elem[i*9+3][1] = temp->elem[i*9+3][1];
			data->elem[i*9+4][1] = temp->elem[i*9+4][1];
			data->elem[i*9+5][1] = temp->elem[i*9+5][1];
			data->elem[i*9+6][1] = temp->elem[i*9+6][1];
			data->elem[i*9+7][1] = temp->elem[i*9+7][1];
			data->elem[i*9+8][1] = temp->elem[i*9+8][1];
		}
		return;
	  case 10:
		for(i=0;i<n;i++){
			temp->elem[i*10+0][0] = (data->elem[i*10+0][0]) + (data->elem[i*10+1][0]) + (data->elem[i*10+2][0]) + (data->elem[i*10+3][0]) + (data->elem[i*10+4][0]) + (data->elem[i*10+5][0]) + (data->elem[i*10+6][0]) + (data->elem[i*10+7][0]) + (data->elem[i*10+8][0]) + (data->elem[i*10+9][0])
			;
			temp->elem[i*10+1][0] = (data->elem[i*10+0][0]) + (8.09016994374947e-01)*(data->elem[i*10+1][0]) + (3.09016994374947e-01)*(data->elem[i*10+2][0]) + (-3.09016994374947e-01)*(data->elem[i*10+3][0]) + (-8.09016994374947e-01)*(data->elem[i*10+4][0]) + (-data->elem[i*10+5][0]) + (-8.09016994374947e-01)*(data->elem[i*10+6][0]) + (-3.09016994374948e-01)*(data->elem[i*10+7][0]) + (3.09016994374947e-01)*(data->elem[i*10+8][0]) + (8.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+1][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+2][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+3][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+4][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+6][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+7][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+8][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+2][0] = (data->elem[i*10+0][0]) + (3.09016994374947e-01)*(data->elem[i*10+1][0]) + (-8.09016994374947e-01)*(data->elem[i*10+2][0]) + (-8.09016994374947e-01)*(data->elem[i*10+3][0]) + (3.09016994374947e-01)*(data->elem[i*10+4][0]) + (data->elem[i*10+5][0]) + (3.09016994374947e-01)*(data->elem[i*10+6][0]) + (-8.09016994374947e-01)*(data->elem[i*10+7][0]) + (-8.09016994374947e-01)*(data->elem[i*10+8][0]) + (3.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+1][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+2][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+3][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+4][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+6][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+7][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+8][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+3][0] = (data->elem[i*10+0][0]) + (-3.09016994374947e-01)*(data->elem[i*10+1][0]) + (-8.09016994374947e-01)*(data->elem[i*10+2][0]) + (8.09016994374947e-01)*(data->elem[i*10+3][0]) + (3.09016994374947e-01)*(data->elem[i*10+4][0]) + (-data->elem[i*10+5][0]) + (3.09016994374947e-01)*(data->elem[i*10+6][0]) + (8.09016994374947e-01)*(data->elem[i*10+7][0]) + (-8.09016994374947e-01)*(data->elem[i*10+8][0]) + (-3.09016994374948e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+1][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+2][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+3][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+4][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+6][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+7][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+8][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+4][0] = (data->elem[i*10+0][0]) + (-8.09016994374947e-01)*(data->elem[i*10+1][0]) + (3.09016994374947e-01)*(data->elem[i*10+2][0]) + (3.09016994374947e-01)*(data->elem[i*10+3][0]) + (-8.09016994374947e-01)*(data->elem[i*10+4][0]) + (data->elem[i*10+5][0]) + (-8.09016994374947e-01)*(data->elem[i*10+6][0]) + (3.09016994374947e-01)*(data->elem[i*10+7][0]) + (3.09016994374947e-01)*(data->elem[i*10+8][0]) + (-8.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+1][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+2][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+3][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+4][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+6][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+7][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+8][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+5][0] = (data->elem[i*10+0][0]) + (-data->elem[i*10+1][0]) + (data->elem[i*10+2][0]) + (-data->elem[i*10+3][0]) + (data->elem[i*10+4][0]) + (-data->elem[i*10+5][0]) + (data->elem[i*10+6][0]) + (-data->elem[i*10+7][0]) + (data->elem[i*10+8][0]) + (-data->elem[i*10+9][0])
			;
			temp->elem[i*10+6][0] = (data->elem[i*10+0][0]) + (-8.09016994374947e-01)*(data->elem[i*10+1][0]) + (3.09016994374947e-01)*(data->elem[i*10+2][0]) + (3.09016994374947e-01)*(data->elem[i*10+3][0]) + (-8.09016994374947e-01)*(data->elem[i*10+4][0]) + (data->elem[i*10+5][0]) + (-8.09016994374947e-01)*(data->elem[i*10+6][0]) + (3.09016994374947e-01)*(data->elem[i*10+7][0]) + (3.09016994374947e-01)*(data->elem[i*10+8][0]) + (-8.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+1][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+2][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+3][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+4][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+6][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+7][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+8][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+7][0] = (data->elem[i*10+0][0]) + (-3.09016994374948e-01)*(data->elem[i*10+1][0]) + (-8.09016994374947e-01)*(data->elem[i*10+2][0]) + (8.09016994374947e-01)*(data->elem[i*10+3][0]) + (3.09016994374947e-01)*(data->elem[i*10+4][0]) + (-data->elem[i*10+5][0]) + (3.09016994374947e-01)*(data->elem[i*10+6][0]) + (8.09016994374947e-01)*(data->elem[i*10+7][0]) + (-8.09016994374947e-01)*(data->elem[i*10+8][0]) + (-3.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+1][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+2][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+3][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+4][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+6][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+7][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+8][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+8][0] = (data->elem[i*10+0][0]) + (3.09016994374947e-01)*(data->elem[i*10+1][0]) + (-8.09016994374947e-01)*(data->elem[i*10+2][0]) + (-8.09016994374947e-01)*(data->elem[i*10+3][0]) + (3.09016994374947e-01)*(data->elem[i*10+4][0]) + (data->elem[i*10+5][0]) + (3.09016994374947e-01)*(data->elem[i*10+6][0]) + (-8.09016994374947e-01)*(data->elem[i*10+7][0]) + (-8.09016994374947e-01)*(data->elem[i*10+8][0]) + (3.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+1][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+2][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+3][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+4][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+6][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+7][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+8][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+9][0] = (data->elem[i*10+0][0]) + (8.09016994374947e-01)*(data->elem[i*10+1][0]) + (3.09016994374947e-01)*(data->elem[i*10+2][0]) + (-3.09016994374948e-01)*(data->elem[i*10+3][0]) + (-8.09016994374947e-01)*(data->elem[i*10+4][0]) + (-data->elem[i*10+5][0]) + (-8.09016994374947e-01)*(data->elem[i*10+6][0]) + (-3.09016994374947e-01)*(data->elem[i*10+7][0]) + (3.09016994374947e-01)*(data->elem[i*10+8][0]) + (8.09016994374947e-01)*(data->elem[i*10+9][0])
			 + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+1][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+2][1]) + (-sign)*(-9.51056516295154e-01)*(data->elem[i*10+3][1]) + (-sign)*(-5.87785252292473e-01)*(data->elem[i*10+4][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+6][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+7][1]) + (-sign)*(9.51056516295154e-01)*(data->elem[i*10+8][1]) + (-sign)*(5.87785252292473e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+0][1] = 
			 + (data->elem[i*10+0][1]) + (data->elem[i*10+1][1]) + (data->elem[i*10+2][1]) + (data->elem[i*10+3][1]) + (data->elem[i*10+4][1]) + (data->elem[i*10+5][1]) + (data->elem[i*10+6][1]) + (data->elem[i*10+7][1]) + (data->elem[i*10+8][1]) + (data->elem[i*10+9][1]);
			temp->elem[i*10+1][1] = sign*(5.87785252292473e-01)*(data->elem[i*10+1][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+2][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+3][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+4][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+6][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+7][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+8][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (8.09016994374947e-01)*(data->elem[i*10+1][1]) + (3.09016994374947e-01)*(data->elem[i*10+2][1]) + (-3.09016994374947e-01)*(data->elem[i*10+3][1]) + (-8.09016994374947e-01)*(data->elem[i*10+4][1]) + (-data->elem[i*10+5][1]) + (-8.09016994374947e-01)*(data->elem[i*10+6][1]) + (-3.09016994374948e-01)*(data->elem[i*10+7][1]) + (3.09016994374947e-01)*(data->elem[i*10+8][1]) + (8.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+2][1] = sign*(9.51056516295154e-01)*(data->elem[i*10+1][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+2][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+3][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+4][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+6][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+7][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+8][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (3.09016994374947e-01)*(data->elem[i*10+1][1]) + (-8.09016994374947e-01)*(data->elem[i*10+2][1]) + (-8.09016994374947e-01)*(data->elem[i*10+3][1]) + (3.09016994374947e-01)*(data->elem[i*10+4][1]) + (data->elem[i*10+5][1]) + (3.09016994374947e-01)*(data->elem[i*10+6][1]) + (-8.09016994374947e-01)*(data->elem[i*10+7][1]) + (-8.09016994374947e-01)*(data->elem[i*10+8][1]) + (3.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+3][1] = sign*(9.51056516295154e-01)*(data->elem[i*10+1][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+2][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+3][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+4][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+6][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+7][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+8][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (-3.09016994374947e-01)*(data->elem[i*10+1][1]) + (-8.09016994374947e-01)*(data->elem[i*10+2][1]) + (8.09016994374947e-01)*(data->elem[i*10+3][1]) + (3.09016994374947e-01)*(data->elem[i*10+4][1]) + (-data->elem[i*10+5][1]) + (3.09016994374947e-01)*(data->elem[i*10+6][1]) + (8.09016994374947e-01)*(data->elem[i*10+7][1]) + (-8.09016994374947e-01)*(data->elem[i*10+8][1]) + (-3.09016994374948e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+4][1] = sign*(5.87785252292473e-01)*(data->elem[i*10+1][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+2][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+3][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+4][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+6][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+7][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+8][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (-8.09016994374947e-01)*(data->elem[i*10+1][1]) + (3.09016994374947e-01)*(data->elem[i*10+2][1]) + (3.09016994374947e-01)*(data->elem[i*10+3][1]) + (-8.09016994374947e-01)*(data->elem[i*10+4][1]) + (data->elem[i*10+5][1]) + (-8.09016994374947e-01)*(data->elem[i*10+6][1]) + (3.09016994374947e-01)*(data->elem[i*10+7][1]) + (3.09016994374947e-01)*(data->elem[i*10+8][1]) + (-8.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+5][1] = 
			 + (data->elem[i*10+0][1]) + (-data->elem[i*10+1][1]) + (data->elem[i*10+2][1]) + (-data->elem[i*10+3][1]) + (data->elem[i*10+4][1]) + (-data->elem[i*10+5][1]) + (data->elem[i*10+6][1]) + (-data->elem[i*10+7][1]) + (data->elem[i*10+8][1]) + (-data->elem[i*10+9][1]);
			temp->elem[i*10+6][1] = sign*(-5.87785252292473e-01)*(data->elem[i*10+1][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+2][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+3][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+4][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+6][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+7][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+8][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (-8.09016994374947e-01)*(data->elem[i*10+1][1]) + (3.09016994374947e-01)*(data->elem[i*10+2][1]) + (3.09016994374947e-01)*(data->elem[i*10+3][1]) + (-8.09016994374947e-01)*(data->elem[i*10+4][1]) + (data->elem[i*10+5][1]) + (-8.09016994374947e-01)*(data->elem[i*10+6][1]) + (3.09016994374947e-01)*(data->elem[i*10+7][1]) + (3.09016994374947e-01)*(data->elem[i*10+8][1]) + (-8.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+7][1] = sign*(-9.51056516295154e-01)*(data->elem[i*10+1][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+2][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+3][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+4][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+6][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+7][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+8][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (-3.09016994374948e-01)*(data->elem[i*10+1][1]) + (-8.09016994374947e-01)*(data->elem[i*10+2][1]) + (8.09016994374947e-01)*(data->elem[i*10+3][1]) + (3.09016994374947e-01)*(data->elem[i*10+4][1]) + (-data->elem[i*10+5][1]) + (3.09016994374947e-01)*(data->elem[i*10+6][1]) + (8.09016994374947e-01)*(data->elem[i*10+7][1]) + (-8.09016994374947e-01)*(data->elem[i*10+8][1]) + (-3.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+8][1] = sign*(-9.51056516295154e-01)*(data->elem[i*10+1][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+2][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+3][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+4][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+6][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+7][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+8][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (3.09016994374947e-01)*(data->elem[i*10+1][1]) + (-8.09016994374947e-01)*(data->elem[i*10+2][1]) + (-8.09016994374947e-01)*(data->elem[i*10+3][1]) + (3.09016994374947e-01)*(data->elem[i*10+4][1]) + (data->elem[i*10+5][1]) + (3.09016994374947e-01)*(data->elem[i*10+6][1]) + (-8.09016994374947e-01)*(data->elem[i*10+7][1]) + (-8.09016994374947e-01)*(data->elem[i*10+8][1]) + (3.09016994374947e-01)*(data->elem[i*10+9][1]);
			temp->elem[i*10+9][1] = sign*(-5.87785252292473e-01)*(data->elem[i*10+1][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+2][0]) + sign*(-9.51056516295154e-01)*(data->elem[i*10+3][0]) + sign*(-5.87785252292473e-01)*(data->elem[i*10+4][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+6][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+7][0]) + sign*(9.51056516295154e-01)*(data->elem[i*10+8][0]) + sign*(5.87785252292473e-01)*(data->elem[i*10+9][0])
			 + (data->elem[i*10+0][1]) + (8.09016994374947e-01)*(data->elem[i*10+1][1]) + (3.09016994374947e-01)*(data->elem[i*10+2][1]) + (-3.09016994374948e-01)*(data->elem[i*10+3][1]) + (-8.09016994374947e-01)*(data->elem[i*10+4][1]) + (-data->elem[i*10+5][1]) + (-8.09016994374947e-01)*(data->elem[i*10+6][1]) + (-3.09016994374947e-01)*(data->elem[i*10+7][1]) + (3.09016994374947e-01)*(data->elem[i*10+8][1]) + (8.09016994374947e-01)*(data->elem[i*10+9][1]);
		}
		for(i=0;i<n;i++){
			data->elem[i*10+0][0] = temp->elem[i*10+0][0];
			data->elem[i*10+1][0] = temp->elem[i*10+1][0];
			data->elem[i*10+2][0] = temp->elem[i*10+2][0];
			data->elem[i*10+3][0] = temp->elem[i*10+3][0];
			data->elem[i*10+4][0] = temp->elem[i*10+4][0];
			data->elem[i*10+5][0] = temp->elem[i*10+5][0];
			data->elem[i*10+6][0] = temp->elem[i*10+6][0];
			data->elem[i*10+7][0] = temp->elem[i*10+7][0];
			data->elem[i*10+8][0] = temp->elem[i*10+8][0];
			data->elem[i*10+9][0] = temp->elem[i*10+9][0];
			data->elem[i*10+0][1] = temp->elem[i*10+0][1];
			data->elem[i*10+1][1] = temp->elem[i*10+1][1];
			data->elem[i*10+2][1] = temp->elem[i*10+2][1];
			data->elem[i*10+3][1] = temp->elem[i*10+3][1];
			data->elem[i*10+4][1] = temp->elem[i*10+4][1];
			data->elem[i*10+5][1] = temp->elem[i*10+5][1];
			data->elem[i*10+6][1] = temp->elem[i*10+6][1];
			data->elem[i*10+7][1] = temp->elem[i*10+7][1];
			data->elem[i*10+8][1] = temp->elem[i*10+8][1];
			data->elem[i*10+9][1] = temp->elem[i*10+9][1];
		}
		return;
}
